{"version":3,"sources":["js/anchor.js"],"names":["scrollAnchors","e","respond","distanceToTop","el","Math","floor","getBoundingClientRect","top","preventDefault","targetID","getAttribute","targetAnchor","document","querySelector","originalTop","window","scrollBy","left","behavior","checkIfDone","setInterval","atBottom","innerHeight","pageYOffset","body","offsetHeight","tabIndex","focus","history","pushState","location","clearInterval","addEventListener","target","tagName","href","indexOf","pathname","search"],"mappings":";AA2CG,SAASA,EAAcC,GAAGC,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KAGtBC,SAAAA,EAAcC,GACdC,OAAAA,KAAKC,MAAMF,EAAGG,wBAAwBC,KAGnDP,EAAEQ,iBACEC,IAAAA,EAAYR,EAAWA,EAAQS,aAAa,QAAU,KAAKA,aAAa,QACzEC,EAAeC,SAASC,cAAcJ,GACrC,GAACE,EAAD,CACAG,IAAAA,EAAcZ,EAAcS,GAChCI,OAAOC,SAAS,CAAET,IAAKO,EAAaG,KAAM,EAAGC,SAAU,WACnDC,IAAAA,EAAcC,YAAY,WACzBC,IAAAA,EAAWN,OAAOO,YAAcP,OAAOQ,aAAeX,SAASY,KAAKC,aAAe,GACnD,IAAhCvB,EAAcS,IAAuBU,KACxCV,EAAae,SAAW,KACxBf,EAAagB,QAGH,YAAaZ,OAEnBA,OAAOa,QAAQC,UAAU,GAAI,GAAIpB,GAI3BM,OAAOe,SAAWrB,EAI5BsB,cAAcZ,KAEb,MApEPP,SAASoB,iBAAiB,QAAS,SAAShC,GAIjB,MAArBA,EAAEiC,OAAOC,WAERlC,EAAEiC,OAAOE,OAAuC,GAA/BnC,EAAEiC,OAAOE,KAAKC,QAAQ,MAAiBpC,EAAEiC,OAAOI,UAAYP,SAASO,UAAc,IAAMrC,EAAEiC,OAAOI,UAAYP,SAASO,UAAerC,EAAEiC,OAAOK,QAAUR,SAASQ,QAOvLvC,EAAcC,EAAGA,EAAEiC","file":"anchor.fdac3b66.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n* \r\n* Event delegation is a bit cleaner imho \r\n* and requires less horsepower if you've got a lot of links to work with. =) \r\n* \r\n*/\r\n\r\ndocument.addEventListener('click', function(e) {\r\n  \r\n  \r\n  // If it isn't an anchor element, don't even bother...\r\n  if (e.target.tagName !== 'A') return;\r\n  \r\n  if ((e.target.href && e.target.href.indexOf('#') != -1) && ((e.target.pathname == location.pathname) || ('/' + e.target.pathname == location.pathname)) && (e.target.search == location.search)) {\r\n    \r\n /** \r\n * If everything checks out, \r\n * pass the click event and the event target\r\n * on through to the scrollAnchors function.\r\n */ \r\n\t\t\tscrollAnchors(e, e.target);\r\n    \r\n  }\r\n  \r\n  \r\n/** \r\n*\r\n* If you want to target links that have the scroll class, just uncomment the code below (after \r\n* commenting out the code above, of course! =D ): \r\n*\r\n*/\r\n  \r\n//   if (e.target.tagName !== 'A') return; \r\n  \r\n//   if (e.target.className.contains('.scroll')) {\r\n    \r\n//      scrollAnchors(e, e.target);\r\n    \r\n//   }\r\n  \r\n});\r\n\r\n\t\t\t\r\n\t\t\tfunction scrollAnchors(e, respond = null) {\r\n\t\t\t\t// const distanceToTop = el => Math.floor(el.getBoundingClientRect().top);\r\n        \r\n        function distanceToTop(el) { \r\n          return Math.floor(el.getBoundingClientRect().top); \r\n        }\r\n        \r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar targetID = (respond) ? respond.getAttribute('href') : this.getAttribute('href');\r\n\t\t\tvar targetAnchor = document.querySelector(targetID);\r\n\t\t\t\tif (!targetAnchor) return;\r\n\t\t\t\tvar originalTop = distanceToTop(targetAnchor);\r\n\t\t\t\twindow.scrollBy({ top: originalTop, left: 0, behavior: 'smooth' });\r\n\t\t\t\tvar checkIfDone = setInterval(function() {\r\n\t\t\t\t\tvar atBottom = window.innerHeight + window.pageYOffset >= document.body.offsetHeight - 2;\r\n\t\t\t\t\tif (distanceToTop(targetAnchor) === 0 || atBottom) {\r\n\t\t\t\t\t\ttargetAnchor.tabIndex = '-1';\r\n\t\t\t\t\t\ttargetAnchor.focus();\r\n            \r\n           // Let's make sure the History API even exists first..\r\n            if ('history' in window) {\r\n              \r\n\t\t\t\t\t\t    window.history.pushState('', '', targetID);\r\n              \r\n              } else {\r\n                // Do it the old-fashioned way!\r\n                window.location = targetID;\r\n                \r\n              }\r\n           \r\n\t\t\t\t\t\tclearInterval(checkIfDone);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 100);\r\n\t\t\t}"]}